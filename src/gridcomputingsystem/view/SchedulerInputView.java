/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gridcomputingsystem.view;

import gridcomputingsystem.model.Job;
import gridcomputingsystem.model.Resource;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Filippo-TheAppExpert
 */
public class SchedulerInputView extends javax.swing.JPanel {

    private final DefaultListModel<Job> jobListModel = new DefaultListModel<>();
    private final DefaultListModel<Resource> resourceListModel = new DefaultListModel<>();
    private int jobCounter, resourceCounter;
    private final SchedulerInputListener listener;

    /**
     * Creates new form GridInputView
     *
     * @param listener
     */
    public SchedulerInputView(SchedulerInputListener listener) {
        this.listener = listener;
        initComponents();
        configComponents();
        addListChangeListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        removeResource = new javax.swing.JButton();
        addResource = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        totalResources = new javax.swing.JLabel();
        viewResource = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        resourceList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        removeJob = new javax.swing.JButton();
        addJob = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        totalJobs = new javax.swing.JLabel();
        viewJob = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jobList = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        progressOutput = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), "Resource"));

        removeResource.setText("Remove Resource");
        removeResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeResourceActionPerformed(evt);
            }
        });

        addResource.setText("Add Resource");
        addResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResourceActionPerformed(evt);
            }
        });

        jLabel1.setText("Total Resources:");

        totalResources.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        viewResource.setText("View Selected Resource");
        viewResource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewResourceActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(resourceList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addResource)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeResource))
                    .addComponent(viewResource, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalResources)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(viewResource)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totalResources))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeResource)
                    .addComponent(addResource))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), "Job"));

        removeJob.setText("Remove Job");
        removeJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJobActionPerformed(evt);
            }
        });

        addJob.setText("Add Job");
        addJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJobActionPerformed(evt);
            }
        });

        jLabel3.setText("Total Jobs:");

        totalJobs.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        viewJob.setText("View Selected Job");
        viewJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJobActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jobList);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(addJob)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(removeJob))
                    .addComponent(viewJob, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalJobs)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(viewJob)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(totalJobs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeJob)
                    .addComponent(addJob))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane5.setViewportView(jPanel1);

        progressOutput.setEditable(false);
        progressOutput.setColumns(20);
        progressOutput.setRows(5);
        jScrollPane1.setViewportView(progressOutput);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Progress Output");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJobActionPerformed
        jobCounter++;
        String job = "Job " + jobCounter;
        listener.onJobAddDialog(job, jobCounter);
    }//GEN-LAST:event_addJobActionPerformed

    private void removeJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJobActionPerformed
        int selectedIndex = jobList.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(null, "Cannot remove a Job from Scheduler. Please select a Job from the list.", "Warning Info:-", JOptionPane.WARNING_MESSAGE);
            progressOutput.append("Cannot remove a Job from Scheduler. Please select a Job from the list.\n");
            return;
        }
        Job job = jobListModel.get(selectedIndex);
        listener.onJobRemove(job, selectedIndex);
    }//GEN-LAST:event_removeJobActionPerformed

    private void addResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResourceActionPerformed
        resourceCounter++;
        String resource = "Resource " + resourceCounter;
        listener.onResourceAddDialog(resource, resourceCounter);
    }//GEN-LAST:event_addResourceActionPerformed

    private void removeResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeResourceActionPerformed
        int selectedIndex = resourceList.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(null, "Cannot remove a Resource from Scheduler. Please select a Resource from the list.", "Warning Info:-", JOptionPane.WARNING_MESSAGE);
            progressOutput.append("Cannot remove a Resource from Scheduler. Please select a Resource from the list.\n");
            return;
        }
        Resource resource = resourceListModel.get(selectedIndex);
        listener.onResourceRemove(resource, selectedIndex);
    }//GEN-LAST:event_removeResourceActionPerformed

    private void viewJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJobActionPerformed
        int selectedIndex = jobList.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(null, "Please select a job.", "Warning Info:-", JOptionPane.WARNING_MESSAGE);
            progressOutput.append("Please select a job.\n");
            return;
        }

        listener.onViewJob(jobListModel.get(selectedIndex), (selectedIndex + 1));
    }//GEN-LAST:event_viewJobActionPerformed

    private void viewResourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewResourceActionPerformed
        int selectedIndex = resourceList.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(null, "Please select a resource.", "Warning Info:-", JOptionPane.WARNING_MESSAGE);
            progressOutput.append("Please select a resource.\n");
            return;
        }
        listener.onViewResource(resourceListModel.get(selectedIndex), (selectedIndex + 1));
    }//GEN-LAST:event_viewResourceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJob;
    private javax.swing.JButton addResource;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList jobList;
    private javax.swing.JTextArea progressOutput;
    private javax.swing.JButton removeJob;
    private javax.swing.JButton removeResource;
    private javax.swing.JList resourceList;
    private javax.swing.JLabel totalJobs;
    private javax.swing.JLabel totalResources;
    private javax.swing.JButton viewJob;
    private javax.swing.JButton viewResource;
    // End of variables declaration//GEN-END:variables

    /**
     * This methods adds a listener for handling view and delete button change
     * state {enabled|disabled} based on the item list selection
     */
    private void addListChangeListener() {
        //TODO add a listener for handling view button and delete button state change {enabled|disabled}
        jobList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                enableJobActionButtons();
            }
        });
        resourceList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                enableResourceActionButtons();
            }
        });
    }

    /**
     * This method is used to add a new Job Object To Job List
     *
     * @param job
     * @param addedIndex
     */
    public void addJob(Job job, int addedIndex) {
        jobListModel.addElement(job);
        jobList.setSelectedIndex(addedIndex - 1);
        progressOutput.append("Added a Job into Scheduler.\n");
        enableJobActionButtons();
    }

    /**
     * Decrement by 1
     */
    public void decrementJobCounter() {
        jobCounter -= 1;
    }

    /**
     * Increment by 1
     */
    public void incrementJobCounter() {
        jobCounter += 1;
    }

    /**
     * Replace existing job property with a new one on a specific index
     *
     * @param job
     * @param editedIndex
     */
    public void editJob(Job job, int editedIndex) {
        int position = (editedIndex - 1);
        jobListModel.setElementAt(job, position);
        jobList.setSelectedIndex(position);
        progressOutput.append("Edited a Job from Scheduler at position " + editedIndex + ".\n");
    }

    /**
     * This method is used to add a new Resource Object To Resource List
     *
     * @param resource
     * @param addedIndex
     */
    public void addResource(Resource resource, int addedIndex) {
        resourceListModel.addElement(resource);
        resourceList.setSelectedIndex(addedIndex - 1);
        progressOutput.append("Added a Resource into Scheduler.\n");
        enableResourceActionButtons();
    }

    /**
     * Decrement by 1
     */
    public void decrementResourceCounter() {
        resourceCounter -= 1;
    }

    /**
     * Increment by 1
     */
    public void incrementResourceCounter() {
        resourceCounter += 1;
    }

    /**
     * Replace existing resource property with a new one on a specific index
     *
     * @param resource
     * @param editedIndex
     */
    public void editResource(Resource resource, int editedIndex) {
        int position = (editedIndex - 1);
        resourceListModel.setElementAt(resource, position);
        resourceList.setSelectedIndex(position);
        progressOutput.append("Edited a Resource from Scheduler at position " + editedIndex + ".\n");
    }

    private void configComponents() {
        disableJobActionButtons();
        disableResourceActionButtons();

        jobList.setModel(jobListModel);
        jobList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        resourceList.setModel(resourceListModel);
        resourceList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    private void enableJobActionButtons() {
        viewJob.setEnabled(true);
        removeJob.setEnabled(true);
    }

    private void enableResourceActionButtons() {
        viewResource.setEnabled(true);
        removeResource.setEnabled(true);
    }

    private void disableJobActionButtons() {
        viewJob.setEnabled(false);
        removeJob.setEnabled(false);
    }

    private void disableResourceActionButtons() {
        viewResource.setEnabled(false);
        removeResource.setEnabled(false);
    }

    public void removeJob(String job, int removedIndex) {
        jobListModel.remove(removedIndex);
        progressOutput.append("Removed a Job " + removedIndex + " from Scheduler.\n");
        disableJobActionButtons();
    }

    public void removeResource(String resource, int removedIndex) {
        resourceListModel.remove(removedIndex);
        progressOutput.append("Removed a Resource " + removedIndex + " from Scheduler.\n");
        disableResourceActionButtons();
    }

    /**
     * This is a channel to notify all the action between the controller and the
     * view itself
     */
    public interface SchedulerInputListener {

        void onJobAddDialog(String job, int addedIndex);

        void onJobRemove(Job job, int removedIndex);

        void onResourceAddDialog(String resource, int addedIndex);

        void onResourceRemove(Resource resource, int removedIndex);

        void onViewJob(Job job, int selectedIndex);

        void onViewResource(Resource resource, int selectedIndex);
    }
}
